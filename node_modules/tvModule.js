var path = require('path').resolve(__dirname, '..');

function allReplace(retStr) {
	var obj = {
		' ': '',
		'\\+': 'plus',
		'é': 'e',
		'è': 'e',
		'ê': 'e',
		'ô': 'o',
		"'": '',
		'>': '',
		'/': '',
		' "génération HBO"': ''
	};
	for (var x in obj) {
		retStr = retStr.replace(new RegExp(x, 'g'), obj[x]);
	}
	return retStr;
}

function writeXml (xmlClbk) {
    var fs = require('fs'),
        file    = path + '/TvProg.xml',
        xml     = fs.readFileSync ( file, 'utf8' ).replace( /§[^§]+§/gm, "§ -->\n<!-- §" ),
        pos     = xml.search( /<!-- §/gm ),
        tab     ='\n\t\t\t',
        startXml= xml.slice( 0, pos ) + '\t\t<one-of>'+ tab,
        endXml  = xml.slice(pos);

    getEpg( function (epgFile) {
        epgFile = epgFile.channels.channel;
        for (var i= 0; i < epgFile.length; i++) {
            var tagAction = '<tag>out.action.id = "' + (i+1) + '";out.action.name="'+ epgFile[i].name+'";</tag>'
            startXml = startXml + tab + '<item>' + (i+1) + tagAction + '</item>' + tab + '<item>' + epgFile[i].name + tagAction +'</item>\n';
        }
        var writeXml = startXml + '\n\t\t</one-of>'+ tab + endXml;
        fs.writeFileSync ( file, writeXml, 'utf8' );
        xmlClbk('Ecriture des chaines: OK ...');
    });
}

function getEpg (epgFile) {
    var options = {
        url : 'http://lsm-rendezvous040413.orange.fr/API/',
        qs : {'api_token' : 'be906750a3cd20d6ddb47ec0b50e7a68', 'output' : 'json', 'withChannels' : '1'}
    };
    require('request') (options, function (err, response, body) {
        !err && response.statusCode == 200 ? epgFile(JSON.parse(body)) : error('[ TvProg ]' + err);
    });
}

function sendEpg (epgData, sendClbk) {
    getEpg( function (epgFile) {
        require('fs').readFile(path + '/www/images/icons/' + epgData.ico, function (err, buf) {
            sendClbk ({
                epgIcon:    buf.toString('base64'),
                epgFile:    epgFile.diffusions.diffusion[epgData.chnl-1],
                epgData:    epgData,
                channelId:  epgFile.diffusions.diffusion[epgData.chnl-1].channelId
            });
        });
    });
}

module.exports.allReplace = allReplace;
module.exports.writeXml = writeXml;
module.exports.sendEpg = sendEpg;